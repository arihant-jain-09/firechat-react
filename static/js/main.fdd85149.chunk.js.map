{"version":3,"sources":["firebase.js","components/SignIn.jsx","components/CardUI.jsx","components/ChatMessage.jsx","components/ChatRoom.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","useStyles","makeStyles","theme","maindiv","backgroundColor","div","width","height","button","position","top","left","color","padding","SignIn","classes","className","Button","onClick","provider","GoogleAuthProvider","signInWithPopup","card","spacing","borderRadius","cardHeader","props","messageClass","avatar","cardheadtypo","palette","secondary","contrastText","paddingLeft","light","primary","avatardefault","marginRight","CardUI","text","Card","CardHeader","Avatar","src","photoURL","title","Typography","console","log","length","ChatMessage","message","uid","currentUser","Grid","item","lg","alignContent","Paper","square","marginTop","marginBottom","input","btn","ChatRoom","dummy","useRef","messageRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setformValue","sendMessage","e","a","preventDefault","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behaviour","main","map","msg","id","ref","onSubmit","Input","autoFocus","fullWidth","required","placeholder","onChange","target","value","type","style","fontSize","appbar","marginLeft","grid","display","typography","flexGrow","letterSpacing","App","useAuthState","user","Container","AppBar","Toolbar","variant","signOut","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdd85149.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyBWZC9xWMKEQMuGPyncAFlaVGnHlNwnEDY\",\r\n    authDomain: \"superchat-33ed4.firebaseapp.com\",\r\n    projectId: \"superchat-33ed4\",\r\n    storageBucket: \"superchat-33ed4.appspot.com\",\r\n    messagingSenderId: \"305060583764\",\r\n    appId: \"1:305060583764:web:f11e117b65ec65e718d0c1\",\r\n    measurementId: \"G-45GES8K7BV\"\r\n})\r\nexport const firestore=firebase.firestore();\r\nexport const auth=firebase.auth();\r\nexport default firebase;\r\n","import firebase,{auth} from '../firebase'\r\nimport {makeStyles,Button} from '@material-ui/core'\r\nconst useStyles = makeStyles((theme)=>{\r\n  return{\r\n    maindiv:{\r\n      backgroundColor:\"#282c34\"\r\n    },\r\n    div:{\r\n      backgroundColor:\"#282c34\",\r\n      width:'100%',\r\n      height:'500px'\r\n    },\r\n    button:{\r\n      position:\"relative\",\r\n      top:\"100px\",\r\n      left:'325px',\r\n      backgroundColor:\"#0d47a1\",\r\n      color:\"white\",\r\n      padding:\"20px 30px\",\r\n      \"&:hover\":{\r\n        backgroundColor: \"#1976d2\"\r\n      }\r\n    },\r\n\r\n  }\r\n  })\r\nfunction SignIn(){\r\n  const classes = useStyles();\r\n  const signInWithGoogle=()=>{\r\n    const provider=new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n  return(\r\n    <div className={classes.maindiv}>\r\n      <Button  className={classes.button} onClick={signInWithGoogle}>Sign In with Google</Button>\r\n      <div className={classes.div}></div>\r\n    </div>\r\n        )\r\n}\r\nexport default SignIn\r\n","import {Card,CardHeader,Avatar,Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core';\r\nconst useStyles=makeStyles((theme)=>{\r\n  return{\r\n    card:{\r\n      height:theme.spacing(5),\r\n      borderRadius:theme.spacing(0)\r\n    },\r\n    cardHeader:{\r\n      height:theme.spacing(1.1),\r\n      position:'relative',\r\n      left:(props)=>{\r\n        if(props.messageClass===\"sent\"){\r\n          return '350px'\r\n        }\r\n      },\r\n      width:(props)=>{\r\n        if(props.messageClass==='received'){\r\n          return '50%'\r\n        }\r\n      }\r\n    },\r\n    avatar:{\r\n      width:theme.spacing(3),\r\n      height:theme.spacing(3)\r\n    },\r\n    cardheadtypo:{\r\n      color:theme.palette.secondary.contrastText,\r\n      // borderRadius:\"16px 2px 2px 16px\" ,\r\n      borderRadius:theme.spacing(2),\r\n      padding: theme.spacing(1),\r\n      paddingLeft:theme.spacing(2.2),\r\n      backgroundColor:(props)=>{\r\n        if(props.messageClass===\"sent\"){\r\n           return theme.palette.secondary.light\r\n          }\r\n        else {\r\n          return theme.palette.primary.light\r\n        }\r\n      }\r\n    },\r\n    avatardefault:{\r\n      marginRight:theme.spacing(0.5)\r\n    }\r\n  }\r\n})\r\nconst Inputlength=(text)=>{\r\n  console.log(text);\r\n  if(text.length<61)\r\n  return text\r\n  else{\r\n    return \"Msg should be less than 60 characters\"\r\n  }\r\n}\r\nfunction CardUI(props){\r\n  const classes=useStyles(props);\r\n  return <div>\r\n    <Card className={classes.card} >\r\n      <CardHeader classes={{avatar:classes.avatardefault}}\r\n        className={classes.cardHeader}\r\n        avatar={<Avatar className={classes.avatar}\r\n          src={props.photoURL}></Avatar>}\r\n          title={<Typography className={classes.cardheadtypo}>{Inputlength(props.text)}</Typography>}/>\r\n    </Card>\r\n  </div>\r\n}\r\nexport default CardUI\r\n","import {auth} from '../firebase'\r\nimport CardUI from './CardUI'\r\nimport {Grid,Paper} from '@material-ui/core'\r\nfunction  ChatMessage  (props){\r\n  const {text,uid,photoURL}=props.message;\r\n  const messageClass=uid === auth.currentUser.uid?'sent':'received';\r\nreturn(\r\n  <div>\r\n    <Grid item lg={12} alignContent='center'>\r\n      <Paper square >\r\n          <CardUI photoURL={photoURL} text={text} messageClass={messageClass}/>\r\n      </Paper>\r\n    </Grid>\r\n\r\n</div>\r\n)\r\n}\r\nexport default ChatMessage\r\n","import React,{useState,useRef} from 'react'\r\nimport firebase,{firestore,auth} from '../firebase'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport ChatMessage from './ChatMessage';\r\nimport {Button,makeStyles,Input} from '@material-ui/core'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nconst useStyles=makeStyles((theme)=>{\r\n  return{\r\n    text:{\r\n      marginTop:theme.spacing(1),\r\n      marginBottom:theme.spacing(3),\r\n      padding:'5px',\r\n      width:'92%'\r\n    },\r\n    input:{\r\n      backgroundColor:\"white\"\r\n    },\r\n    btn:{\r\n      height:'42px',\r\n      \"&:hover\":{\r\n        backgroundColor:\"#506999\"\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nfunction ChatRoom(){\r\n  const classes=useStyles();\r\nconst dummy = useRef();\r\nconst messageRef=firestore.collection('messages');\r\nconst query=messageRef.orderBy('createdAt').limit(25);\r\n//here we will use useCollectionData hook to look for changes in real time\r\n//it returns an object where each object is the chat message in database\r\n//Synatx useCollectionData(query,options)\r\n//options takes an Object idField to give id parameter to each message\r\nconst [messages]=useCollectionData(query,{idField:'id'});\r\n//it returns an object where each object is the chat message in database\r\nconst [formValue,setformValue]=useState('');\r\n//after user press Submit forms calls sendMessage\r\nconst sendMessage=async (e)=>{\r\n  e.preventDefault();\r\n  const {uid,photoURL}=auth.currentUser;\r\n  //to add data just use .add method which takes an object\r\n  await messageRef.add({\r\n    text:formValue,\r\n    createdAt:firebase.firestore.FieldValue.serverTimestamp(),\r\n    uid,\r\n    photoURL\r\n  })\r\n  setformValue('');\r\n  dummy.current.scrollIntoView({behaviour:'smooth'});\r\n}\r\nreturn(\r\n  <>\r\n    <main className={classes.main}>\r\n      {/* if messages then only map */}\r\n      {messages && messages.map((msg)=><ChatMessage key={msg.id} id={msg.id} message={msg} />)}\r\n      <div ref={dummy}></div>\r\n    </main>\r\n    <form onSubmit={sendMessage}  >\r\n      <Input className={classes.input} autoFocus fullWidth classes={{fullWidth:classes.text}} required placeholder=\"Enter your message\" onChange={(e)=>setformValue(e.target.value)} value={formValue} />\r\n      <Button className={classes.btn}  type=\"submit\"><SendIcon style={{ fontSize: 32 }}/></Button>\r\n\r\n    </form>\r\n  </>\r\n)\r\n}\r\nexport default ChatRoom\r\n","import React from 'react'\nimport {makeStyles,Grid,Container,AppBar,Toolbar,Typography,Button} from '@material-ui/core'\nimport SignIn from './components/SignIn'\nimport ChatRoom from './components/ChatRoom'\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport {auth} from './firebase'\nconst useStyles=makeStyles((theme)=>{\n  return{\n\n    appbar:{\n      width:'70%',\n      marginLeft:\"auto\",\n      marginRight:\"auto\"\n    },\n    grid:{\n      display:'block',\n      width:\"70%\",\n      marginLeft:\"auto\",\n      marginRight:\"auto\",\n    },\n    typography:{\n      flexGrow:1,\n      letterSpacing:'2px',\n    }\n  }\n})\nfunction App() {\n  const classes=useStyles();\n    const [user]=useAuthState(auth);\n  return (\n    <div>\n      <Container >\n        <AppBar className={classes.appbar} position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.typography}>\n              FireChat\n            </Typography>\n            {user?<Button color=\"inherit\" onClick={()=>{auth.signOut()}}>Logout</Button>:null}\n          </Toolbar>\n        </AppBar>\n        <Grid container className={classes.grid} >\n            {user?<ChatRoom/>:<SignIn/>}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}